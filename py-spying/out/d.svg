<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1974" onload="init(evt)" viewBox="0 0 1200 1974" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1974" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="1957.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1957.00"> </text><svg id="frames" x="10" width="1180"><g><title>0x7fc0a6e6a0bd (ld-2.27.so) (5 samples, 1.60%)</title><rect x="0.0000%" y="372" width="1.5974%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="382.50"></text></g><g><title>0x7fc0a6e61af9 (ld-2.27.so) (5 samples, 1.60%)</title><rect x="0.0000%" y="388" width="1.5974%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="398.50"></text></g><g><title>0x7fc0a6e601ef (ld-2.27.so) (4 samples, 1.28%)</title><rect x="0.3195%" y="404" width="1.2780%" height="15" fill="rgb(221,193,54)"/><text x="0.5695%" y="414.50"></text></g><g><title>__static_initialization_and_destruction_0 [clone .constprop.2284] (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="3.1949%" y="404" width="1.2780%" height="15" fill="rgb(248,212,6)"/><text x="3.4449%" y="414.50"></text></g><g><title>torch::jit::registerOperator (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="3.1949%" y="420" width="1.2780%" height="15" fill="rgb(208,68,35)"/><text x="3.4449%" y="430.50"></text></g><g><title>torch::jit::Operator::schema (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="3.1949%" y="436" width="1.2780%" height="15" fill="rgb(232,128,0)"/><text x="3.4449%" y="446.50"></text></g><g><title>torch::jit::parseSchema (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="3.1949%" y="452" width="1.2780%" height="15" fill="rgb(207,160,47)"/><text x="3.4449%" y="462.50"></text></g><g><title>torch::jit::(anonymous namespace)::SchemaParser::parseDeclaration()::{lambda()#1}::operator() const (libtorch_cpu.so) (10 samples, 3.19%)</title><rect x="5.7508%" y="468" width="3.1949%" height="15" fill="rgb(228,23,34)"/><text x="6.0008%" y="478.50">tor..</text></g><g><title>torch::jit::(anonymous namespace)::SchemaParser::parseArgument [clone .constprop.524] (libtorch_cpu.so) (10 samples, 3.19%)</title><rect x="5.7508%" y="484" width="3.1949%" height="15" fill="rgb(218,30,26)"/><text x="6.0008%" y="494.50">tor..</text></g><g><title>torch::jit::SchemaTypeParser::parseType (libtorch_cpu.so) (5 samples, 1.60%)</title><rect x="7.3482%" y="500" width="1.5974%" height="15" fill="rgb(220,122,19)"/><text x="7.5982%" y="510.50"></text></g><g><title>c10::RegisterOperators::Options::schema (libtorch_cpu.so) (14 samples, 4.47%)</title><rect x="4.7923%" y="436" width="4.4728%" height="15" fill="rgb(250,228,42)"/><text x="5.0423%" y="446.50">c10::..</text></g><g><title>torch::jit::parseSchemaOrName (libtorch_cpu.so) (14 samples, 4.47%)</title><rect x="4.7923%" y="452" width="4.4728%" height="15" fill="rgb(240,193,28)"/><text x="5.0423%" y="462.50">torch..</text></g><g><title>__static_initialization_and_destruction_0 [clone .constprop.545] (libtorch_cpu.so) (16 samples, 5.11%)</title><rect x="4.4728%" y="404" width="5.1118%" height="15" fill="rgb(216,20,37)"/><text x="4.7228%" y="414.50">__stat..</text></g><g><title>c10::Module::def &amp;&amp; (libtorch_cpu.so) (16 samples, 5.11%)</title><rect x="4.4728%" y="420" width="5.1118%" height="15" fill="rgb(206,188,39)"/><text x="4.7228%" y="430.50">c10::M..</text></g><g><title>c10::Module::def &amp;&amp; (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="9.5847%" y="420" width="1.2780%" height="15" fill="rgb(217,207,13)"/><text x="9.8347%" y="430.50"></text></g><g><title>c10::RegisterOperators::Options::schema (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="9.5847%" y="436" width="1.2780%" height="15" fill="rgb(231,73,38)"/><text x="9.8347%" y="446.50"></text></g><g><title>torch::jit::parseSchemaOrName (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="9.5847%" y="452" width="1.2780%" height="15" fill="rgb(225,20,46)"/><text x="9.8347%" y="462.50"></text></g><g><title>__static_initialization_and_destruction_0 [clone .constprop.669] (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="9.5847%" y="404" width="2.5559%" height="15" fill="rgb(210,31,41)"/><text x="9.8347%" y="414.50">__..</text></g><g><title>dlopen (libdl-2.27.so) (39 samples, 12.46%)</title><rect x="0.0000%" y="260" width="12.4601%" height="15" fill="rgb(221,200,47)"/><text x="0.2500%" y="270.50">dlopen (libdl-2.27...</text></g><g><title>0x7fc0a6642735 (libdl-2.27.so) (39 samples, 12.46%)</title><rect x="0.0000%" y="276" width="12.4601%" height="15" fill="rgb(226,26,5)"/><text x="0.2500%" y="286.50">0x7fc0a6642735 (lib..</text></g><g><title>_dl_catch_error (libc-2.27.so) (39 samples, 12.46%)</title><rect x="0.0000%" y="292" width="12.4601%" height="15" fill="rgb(249,33,26)"/><text x="0.2500%" y="302.50">_dl_catch_error (li..</text></g><g><title>_dl_catch_exception (libc-2.27.so) (39 samples, 12.46%)</title><rect x="0.0000%" y="308" width="12.4601%" height="15" fill="rgb(235,183,28)"/><text x="0.2500%" y="318.50">_dl_catch_exception..</text></g><g><title>0x7fc0a6641f96 (libdl-2.27.so) (39 samples, 12.46%)</title><rect x="0.0000%" y="324" width="12.4601%" height="15" fill="rgb(221,5,38)"/><text x="0.2500%" y="334.50">0x7fc0a6641f96 (lib..</text></g><g><title>0x7fc0a6e697ca (ld-2.27.so) (39 samples, 12.46%)</title><rect x="0.0000%" y="340" width="12.4601%" height="15" fill="rgb(247,18,42)"/><text x="0.2500%" y="350.50">0x7fc0a6e697ca (ld-..</text></g><g><title>_dl_catch_exception (libc-2.27.so) (39 samples, 12.46%)</title><rect x="0.0000%" y="356" width="12.4601%" height="15" fill="rgb(241,131,45)"/><text x="0.2500%" y="366.50">_dl_catch_exception..</text></g><g><title>0x7fc0a6e6a1ff (ld-2.27.so) (34 samples, 10.86%)</title><rect x="1.5974%" y="372" width="10.8626%" height="15" fill="rgb(249,31,29)"/><text x="1.8474%" y="382.50">0x7fc0a6e6a1ff (..</text></g><g><title>0x7fc0a6e65733 (ld-2.27.so) (34 samples, 10.86%)</title><rect x="1.5974%" y="388" width="10.8626%" height="15" fill="rgb(225,111,53)"/><text x="1.8474%" y="398.50">0x7fc0a6e65733 (..</text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:74) (4 samples, 1.28%)</title><rect x="12.4601%" y="580" width="1.2780%" height="15" fill="rgb(238,160,17)"/><text x="12.7101%" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.28%)</title><rect x="12.4601%" y="596" width="1.2780%" height="15" fill="rgb(214,148,48)"/><text x="12.7101%" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.28%)</title><rect x="12.4601%" y="612" width="1.2780%" height="15" fill="rgb(232,36,49)"/><text x="12.7101%" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.28%)</title><rect x="12.4601%" y="628" width="1.2780%" height="15" fill="rgb(209,103,24)"/><text x="12.7101%" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.28%)</title><rect x="12.4601%" y="644" width="1.2780%" height="15" fill="rgb(229,88,8)"/><text x="12.7101%" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.28%)</title><rect x="12.4601%" y="660" width="1.2780%" height="15" fill="rgb(213,181,19)"/><text x="12.7101%" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.28%)</title><rect x="12.4601%" y="676" width="1.2780%" height="15" fill="rgb(254,191,54)"/><text x="12.7101%" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.28%)</title><rect x="12.4601%" y="692" width="1.2780%" height="15" fill="rgb(241,83,37)"/><text x="12.7101%" y="702.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py:29) (4 samples, 1.28%)</title><rect x="12.4601%" y="708" width="1.2780%" height="15" fill="rgb(233,36,39)"/><text x="12.7101%" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.28%)</title><rect x="12.4601%" y="724" width="1.2780%" height="15" fill="rgb(226,3,54)"/><text x="12.7101%" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.28%)</title><rect x="12.4601%" y="740" width="1.2780%" height="15" fill="rgb(245,192,40)"/><text x="12.7101%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.28%)</title><rect x="12.4601%" y="756" width="1.2780%" height="15" fill="rgb(238,167,29)"/><text x="12.7101%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.28%)</title><rect x="12.4601%" y="772" width="1.2780%" height="15" fill="rgb(232,182,51)"/><text x="12.7101%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.28%)</title><rect x="12.4601%" y="788" width="1.2780%" height="15" fill="rgb(231,60,39)"/><text x="12.7101%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.28%)</title><rect x="12.4601%" y="804" width="1.2780%" height="15" fill="rgb(208,69,12)"/><text x="12.7101%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.28%)</title><rect x="12.4601%" y="820" width="1.2780%" height="15" fill="rgb(235,93,37)"/><text x="12.7101%" y="830.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (5 samples, 1.60%)</title><rect x="12.4601%" y="452" width="1.5974%" height="15" fill="rgb(213,116,39)"/><text x="12.7101%" y="462.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 1.60%)</title><rect x="12.4601%" y="468" width="1.5974%" height="15" fill="rgb(222,207,29)"/><text x="12.7101%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.60%)</title><rect x="12.4601%" y="484" width="1.5974%" height="15" fill="rgb(206,96,30)"/><text x="12.7101%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.60%)</title><rect x="12.4601%" y="500" width="1.5974%" height="15" fill="rgb(218,138,4)"/><text x="12.7101%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.60%)</title><rect x="12.4601%" y="516" width="1.5974%" height="15" fill="rgb(250,191,14)"/><text x="12.7101%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.60%)</title><rect x="12.4601%" y="532" width="1.5974%" height="15" fill="rgb(239,60,40)"/><text x="12.7101%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.60%)</title><rect x="12.4601%" y="548" width="1.5974%" height="15" fill="rgb(206,27,48)"/><text x="12.7101%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.60%)</title><rect x="12.4601%" y="564" width="1.5974%" height="15" fill="rgb(225,35,8)"/><text x="12.7101%" y="574.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (4 samples, 1.28%)</title><rect x="14.0575%" y="452" width="1.2780%" height="15" fill="rgb(250,213,24)"/><text x="14.3075%" y="462.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.28%)</title><rect x="14.0575%" y="468" width="1.2780%" height="15" fill="rgb(247,123,22)"/><text x="14.3075%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.28%)</title><rect x="14.0575%" y="484" width="1.2780%" height="15" fill="rgb(231,138,38)"/><text x="14.3075%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.28%)</title><rect x="14.0575%" y="500" width="1.2780%" height="15" fill="rgb(231,145,46)"/><text x="14.3075%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.28%)</title><rect x="14.0575%" y="516" width="1.2780%" height="15" fill="rgb(251,118,11)"/><text x="14.3075%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.28%)</title><rect x="14.0575%" y="532" width="1.2780%" height="15" fill="rgb(217,147,25)"/><text x="14.3075%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.28%)</title><rect x="14.0575%" y="548" width="1.2780%" height="15" fill="rgb(247,81,37)"/><text x="14.3075%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.28%)</title><rect x="14.0575%" y="564" width="1.2780%" height="15" fill="rgb(209,12,38)"/><text x="14.3075%" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 4.47%)</title><rect x="12.4601%" y="276" width="4.4728%" height="15" fill="rgb(227,1,9)"/><text x="12.7101%" y="286.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (14 samples, 4.47%)</title><rect x="12.4601%" y="292" width="4.4728%" height="15" fill="rgb(248,47,43)"/><text x="12.7101%" y="302.50">_find..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 4.47%)</title><rect x="12.4601%" y="308" width="4.4728%" height="15" fill="rgb(221,10,30)"/><text x="12.7101%" y="318.50">_call..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 4.47%)</title><rect x="12.4601%" y="324" width="4.4728%" height="15" fill="rgb(210,229,1)"/><text x="12.7101%" y="334.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (14 samples, 4.47%)</title><rect x="12.4601%" y="340" width="4.4728%" height="15" fill="rgb(222,148,37)"/><text x="12.7101%" y="350.50">_find..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 4.47%)</title><rect x="12.4601%" y="356" width="4.4728%" height="15" fill="rgb(234,67,33)"/><text x="12.7101%" y="366.50">_call..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 4.47%)</title><rect x="12.4601%" y="372" width="4.4728%" height="15" fill="rgb(247,98,35)"/><text x="12.7101%" y="382.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 4.47%)</title><rect x="12.4601%" y="388" width="4.4728%" height="15" fill="rgb(247,138,52)"/><text x="12.7101%" y="398.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 4.47%)</title><rect x="12.4601%" y="404" width="4.4728%" height="15" fill="rgb(213,79,30)"/><text x="12.7101%" y="414.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 4.47%)</title><rect x="12.4601%" y="420" width="4.4728%" height="15" fill="rgb(246,177,23)"/><text x="12.7101%" y="430.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 4.47%)</title><rect x="12.4601%" y="436" width="4.4728%" height="15" fill="rgb(230,62,27)"/><text x="12.7101%" y="446.50">_call..</text></g><g><title>&lt;module&gt; (torch/__init__.py:136) (59 samples, 18.85%)</title><rect x="0.0000%" y="148" width="18.8498%" height="15" fill="rgb(216,154,8)"/><text x="0.2500%" y="158.50">&lt;module&gt; (torch/__init__.py:1..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (59 samples, 18.85%)</title><rect x="0.0000%" y="164" width="18.8498%" height="15" fill="rgb(244,35,45)"/><text x="0.2500%" y="174.50">_find_and_load (&lt;frozen impor..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (59 samples, 18.85%)</title><rect x="0.0000%" y="180" width="18.8498%" height="15" fill="rgb(251,115,12)"/><text x="0.2500%" y="190.50">_find_and_load_unlocked (&lt;fro..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (59 samples, 18.85%)</title><rect x="0.0000%" y="196" width="18.8498%" height="15" fill="rgb(240,54,50)"/><text x="0.2500%" y="206.50">_load_unlocked (&lt;frozen impor..</text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (59 samples, 18.85%)</title><rect x="0.0000%" y="212" width="18.8498%" height="15" fill="rgb(233,84,52)"/><text x="0.2500%" y="222.50">module_from_spec (&lt;frozen imp..</text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (59 samples, 18.85%)</title><rect x="0.0000%" y="228" width="18.8498%" height="15" fill="rgb(207,117,47)"/><text x="0.2500%" y="238.50">create_module (&lt;frozen import..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (59 samples, 18.85%)</title><rect x="0.0000%" y="244" width="18.8498%" height="15" fill="rgb(249,43,39)"/><text x="0.2500%" y="254.50">_call_with_frames_removed (&lt;f..</text></g><g><title>initModule (libtorch_python.so) (20 samples, 6.39%)</title><rect x="12.4601%" y="260" width="6.3898%" height="15" fill="rgb(209,38,44)"/><text x="12.7101%" y="270.50">initModu..</text></g><g><title>&lt;module&gt; (torch/functional.py:2) (4 samples, 1.28%)</title><rect x="19.4888%" y="244" width="1.2780%" height="15" fill="rgb(236,212,23)"/><text x="19.7388%" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.28%)</title><rect x="19.4888%" y="260" width="1.2780%" height="15" fill="rgb(242,79,21)"/><text x="19.7388%" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.28%)</title><rect x="19.4888%" y="276" width="1.2780%" height="15" fill="rgb(211,96,35)"/><text x="19.7388%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.28%)</title><rect x="19.4888%" y="292" width="1.2780%" height="15" fill="rgb(253,215,40)"/><text x="19.7388%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.28%)</title><rect x="19.4888%" y="308" width="1.2780%" height="15" fill="rgb(211,81,21)"/><text x="19.7388%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.28%)</title><rect x="19.4888%" y="324" width="1.2780%" height="15" fill="rgb(208,190,38)"/><text x="19.7388%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.28%)</title><rect x="19.4888%" y="340" width="1.2780%" height="15" fill="rgb(235,213,38)"/><text x="19.7388%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.28%)</title><rect x="19.4888%" y="356" width="1.2780%" height="15" fill="rgb(237,122,38)"/><text x="19.7388%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.28%)</title><rect x="19.4888%" y="372" width="1.2780%" height="15" fill="rgb(244,218,35)"/><text x="19.7388%" y="382.50"></text></g><g><title>&lt;module&gt; (torch/nn/__init__.py:1) (4 samples, 1.28%)</title><rect x="19.4888%" y="388" width="1.2780%" height="15" fill="rgb(240,68,47)"/><text x="19.7388%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.28%)</title><rect x="19.4888%" y="404" width="1.2780%" height="15" fill="rgb(210,16,53)"/><text x="19.7388%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.28%)</title><rect x="19.4888%" y="420" width="1.2780%" height="15" fill="rgb(235,124,12)"/><text x="19.7388%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.28%)</title><rect x="19.4888%" y="436" width="1.2780%" height="15" fill="rgb(224,169,11)"/><text x="19.7388%" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.28%)</title><rect x="19.4888%" y="452" width="1.2780%" height="15" fill="rgb(250,166,2)"/><text x="19.7388%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.28%)</title><rect x="19.4888%" y="468" width="1.2780%" height="15" fill="rgb(242,216,29)"/><text x="19.7388%" y="478.50"></text></g><g><title>&lt;module&gt; (torch/__init__.py:331) (5 samples, 1.60%)</title><rect x="19.4888%" y="148" width="1.5974%" height="15" fill="rgb(230,116,27)"/><text x="19.7388%" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.60%)</title><rect x="19.4888%" y="164" width="1.5974%" height="15" fill="rgb(228,99,48)"/><text x="19.7388%" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.60%)</title><rect x="19.4888%" y="180" width="1.5974%" height="15" fill="rgb(253,11,6)"/><text x="19.7388%" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.60%)</title><rect x="19.4888%" y="196" width="1.5974%" height="15" fill="rgb(247,143,39)"/><text x="19.7388%" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.60%)</title><rect x="19.4888%" y="212" width="1.5974%" height="15" fill="rgb(236,97,10)"/><text x="19.7388%" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.60%)</title><rect x="19.4888%" y="228" width="1.5974%" height="15" fill="rgb(233,208,19)"/><text x="19.7388%" y="238.50"></text></g><g><title>&lt;module&gt; (profile_tvvr.py:1) (73 samples, 23.32%)</title><rect x="0.0000%" y="52" width="23.3227%" height="15" fill="rgb(216,164,2)"/><text x="0.2500%" y="62.50">&lt;module&gt; (profile_tvvr.py:1)</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (73 samples, 23.32%)</title><rect x="0.0000%" y="68" width="23.3227%" height="15" fill="rgb(220,129,5)"/><text x="0.2500%" y="78.50">_find_and_load (&lt;frozen importlib._bo..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (73 samples, 23.32%)</title><rect x="0.0000%" y="84" width="23.3227%" height="15" fill="rgb(242,17,10)"/><text x="0.2500%" y="94.50">_find_and_load_unlocked (&lt;frozen impo..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (73 samples, 23.32%)</title><rect x="0.0000%" y="100" width="23.3227%" height="15" fill="rgb(242,107,0)"/><text x="0.2500%" y="110.50">_load_unlocked (&lt;frozen importlib._bo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (73 samples, 23.32%)</title><rect x="0.0000%" y="116" width="23.3227%" height="15" fill="rgb(251,28,31)"/><text x="0.2500%" y="126.50">exec_module (&lt;frozen importlib._boots..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (73 samples, 23.32%)</title><rect x="0.0000%" y="132" width="23.3227%" height="15" fill="rgb(233,223,10)"/><text x="0.2500%" y="142.50">_call_with_frames_removed (&lt;frozen im..</text></g><g><title>0x7fc04ac9fe5a (libavcodec.so.58.54.100) (4 samples, 1.28%)</title><rect x="31.9489%" y="244" width="1.2780%" height="15" fill="rgb(215,21,27)"/><text x="32.1989%" y="254.50"></text></g><g><title>0x7fc04aca791d (libavcodec.so.58.54.100) (12 samples, 3.83%)</title><rect x="36.7412%" y="292" width="3.8339%" height="15" fill="rgb(232,23,21)"/><text x="36.9912%" y="302.50">0x7f..</text></g><g><title>0x7fc04acf2490 (libavcodec.so.58.54.100) (39 samples, 12.46%)</title><rect x="33.8658%" y="276" width="12.4601%" height="15" fill="rgb(244,5,23)"/><text x="34.1158%" y="286.50">0x7fc04acf2490 (lib..</text></g><g><title>0x7fc04acf27ac (libavcodec.so.58.54.100) (4 samples, 1.28%)</title><rect x="46.3259%" y="276" width="1.2780%" height="15" fill="rgb(226,81,46)"/><text x="46.5759%" y="286.50"></text></g><g><title>CodecContext__send_packet_and_recv (av/codec/context.cpython-37m-x86_64-linux-gnu.so) (58 samples, 18.53%)</title><rect x="31.3099%" y="196" width="18.5304%" height="15" fill="rgb(247,70,30)"/><text x="31.5599%" y="206.50">CodecContext__send_packet_and..</text></g><g><title>avcodec_send_packet (libavcodec.so.58.54.100) (57 samples, 18.21%)</title><rect x="31.6294%" y="212" width="18.2109%" height="15" fill="rgb(212,68,19)"/><text x="31.8794%" y="222.50">avcodec_send_packet (libavco..</text></g><g><title>0x7fc04abcf6f7 (libavcodec.so.58.54.100) (57 samples, 18.21%)</title><rect x="31.6294%" y="228" width="18.2109%" height="15" fill="rgb(240,187,13)"/><text x="31.8794%" y="238.50">0x7fc04abcf6f7 (libavcodec.s..</text></g><g><title>0x7fc04acf9229 (libavcodec.so.58.54.100) (52 samples, 16.61%)</title><rect x="33.2268%" y="244" width="16.6134%" height="15" fill="rgb(223,113,26)"/><text x="33.4768%" y="254.50">0x7fc04acf9229 (libavcodec..</text></g><g><title>0x7fc04acf40c1 (libavcodec.so.58.54.100) (52 samples, 16.61%)</title><rect x="33.2268%" y="260" width="16.6134%" height="15" fill="rgb(206,192,2)"/><text x="33.4768%" y="270.50">0x7fc04acf40c1 (libavcodec..</text></g><g><title>0x7fc04acf285d (libavcodec.so.58.54.100) (7 samples, 2.24%)</title><rect x="47.6038%" y="276" width="2.2364%" height="15" fill="rgb(241,108,4)"/><text x="47.8538%" y="286.50">0..</text></g><g><title>0x7fc04acef1d1 (libavcodec.so.58.54.100) (4 samples, 1.28%)</title><rect x="48.5623%" y="292" width="1.2780%" height="15" fill="rgb(247,173,49)"/><text x="48.8123%" y="302.50"></text></g><g><title>__Pyx_Coroutine_SendEx.isra.46 (av/enum.cpython-37m-x86_64-linux-gnu.so) (66 samples, 21.09%)</title><rect x="30.0319%" y="100" width="21.0863%" height="15" fill="rgb(224,114,35)"/><text x="30.2819%" y="110.50">__Pyx_Coroutine_SendEx.isra.46 (a..</text></g><g><title>__pyx_gb_2av_9container_5input_14InputContainer_11generator1 (av/container/input.cpython-37m-x86_64-linux-gnu.so) (66 samples, 21.09%)</title><rect x="30.0319%" y="116" width="21.0863%" height="15" fill="rgb(245,159,27)"/><text x="30.2819%" y="126.50">__pyx_gb_2av_9container_5input_14..</text></g><g><title>decode (av/packet.cpython-37m-x86_64-linux-gnu.so) (62 samples, 19.81%)</title><rect x="31.3099%" y="132" width="19.8083%" height="15" fill="rgb(245,172,44)"/><text x="31.5599%" y="142.50">decode (av/packet.cpython-37m-x..</text></g><g><title>__Pyx__PyObject_CallOneArg (av/packet.cpython-37m-x86_64-linux-gnu.so) (62 samples, 19.81%)</title><rect x="31.3099%" y="148" width="19.8083%" height="15" fill="rgb(236,23,11)"/><text x="31.5599%" y="158.50">__Pyx__PyObject_CallOneArg (av/..</text></g><g><title>decode (av/stream.cpython-37m-x86_64-linux-gnu.so) (62 samples, 19.81%)</title><rect x="31.3099%" y="164" width="19.8083%" height="15" fill="rgb(205,117,38)"/><text x="31.5599%" y="174.50">decode (av/stream.cpython-37m-x..</text></g><g><title>CodecContext_decode (av/codec/context.cpython-37m-x86_64-linux-gnu.so) (62 samples, 19.81%)</title><rect x="31.3099%" y="180" width="19.8083%" height="15" fill="rgb(237,72,25)"/><text x="31.5599%" y="190.50">CodecContext_decode (av/codec/c..</text></g><g><title>_read_from_stream (torchvision/io/video.py:143) (86 samples, 27.48%)</title><rect x="23.9617%" y="84" width="27.4760%" height="15" fill="rgb(244,70,9)"/><text x="24.2117%" y="94.50">_read_from_stream (torchvision/io/video.py:1..</text></g><g><title>read_video (torchvision/io/video.py:244) (91 samples, 29.07%)</title><rect x="23.9617%" y="68" width="29.0735%" height="15" fill="rgb(217,125,39)"/><text x="24.2117%" y="78.50">read_video (torchvision/io/video.py:244)</text></g><g><title>_read_from_stream (torchvision/io/video.py:96) (4 samples, 1.28%)</title><rect x="51.7572%" y="84" width="1.2780%" height="15" fill="rgb(235,36,10)"/><text x="52.0072%" y="94.50"></text></g><g><title>gc_collect (python3.7) (4 samples, 1.28%)</title><rect x="51.7572%" y="100" width="1.2780%" height="15" fill="rgb(251,123,47)"/><text x="52.0072%" y="110.50"></text></g><g><title>__Pyx_Coroutine_SendEx.isra.46 (av/enum.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.28%)</title><rect x="53.6741%" y="132" width="1.2780%" height="15" fill="rgb(221,13,13)"/><text x="53.9241%" y="142.50"></text></g><g><title>__pyx_gb_2av_9container_5input_14InputContainer_8generator (av/container/input.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.28%)</title><rect x="53.6741%" y="148" width="1.2780%" height="15" fill="rgb(238,131,9)"/><text x="53.9241%" y="158.50"></text></g><g><title>av_read_frame (libavformat.so.58.29.100) (4 samples, 1.28%)</title><rect x="53.6741%" y="164" width="1.2780%" height="15" fill="rgb(211,50,8)"/><text x="53.9241%" y="174.50"></text></g><g><title>read_video (torchvision/io/video.py:258) (11 samples, 3.51%)</title><rect x="53.3546%" y="68" width="3.5144%" height="15" fill="rgb(245,182,24)"/><text x="53.6046%" y="78.50">rea..</text></g><g><title>_read_from_stream (torchvision/io/video.py:143) (11 samples, 3.51%)</title><rect x="53.3546%" y="84" width="3.5144%" height="15" fill="rgb(242,14,37)"/><text x="53.6046%" y="94.50">_re..</text></g><g><title>__Pyx_Coroutine_SendEx.isra.46 (av/enum.cpython-37m-x86_64-linux-gnu.so) (10 samples, 3.19%)</title><rect x="53.6741%" y="100" width="3.1949%" height="15" fill="rgb(246,228,12)"/><text x="53.9241%" y="110.50">__P..</text></g><g><title>__pyx_gb_2av_9container_5input_14InputContainer_11generator1 (av/container/input.cpython-37m-x86_64-linux-gnu.so) (10 samples, 3.19%)</title><rect x="53.6741%" y="116" width="3.1949%" height="15" fill="rgb(213,55,15)"/><text x="53.9241%" y="126.50">__p..</text></g><g><title>decode (av/packet.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.60%)</title><rect x="55.2716%" y="132" width="1.5974%" height="15" fill="rgb(209,9,3)"/><text x="55.5216%" y="142.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (av/packet.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.60%)</title><rect x="55.2716%" y="148" width="1.5974%" height="15" fill="rgb(230,59,30)"/><text x="55.5216%" y="158.50"></text></g><g><title>decode (av/stream.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.60%)</title><rect x="55.2716%" y="164" width="1.5974%" height="15" fill="rgb(209,121,21)"/><text x="55.5216%" y="174.50"></text></g><g><title>CodecContext_decode (av/codec/context.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.60%)</title><rect x="55.2716%" y="180" width="1.5974%" height="15" fill="rgb(220,109,13)"/><text x="55.5216%" y="190.50"></text></g><g><title>CodecContext__send_packet_and_recv (av/codec/context.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.60%)</title><rect x="55.2716%" y="196" width="1.5974%" height="15" fill="rgb(232,18,1)"/><text x="55.5216%" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 4.47%)</title><rect x="56.8690%" y="132" width="4.4728%" height="15" fill="rgb(215,41,42)"/><text x="57.1190%" y="142.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (11 samples, 3.51%)</title><rect x="57.8275%" y="148" width="3.5144%" height="15" fill="rgb(224,123,36)"/><text x="58.0775%" y="158.50">_fi..</text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (7 samples, 2.24%)</title><rect x="59.1054%" y="164" width="2.2364%" height="15" fill="rgb(240,125,3)"/><text x="59.3554%" y="174.50">_..</text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (7 samples, 2.24%)</title><rect x="59.1054%" y="180" width="2.2364%" height="15" fill="rgb(205,98,50)"/><text x="59.3554%" y="190.50">f..</text></g><g><title>__Pyx_Import (av/video/frame.cpython-37m-x86_64-linux-gnu.so) (16 samples, 5.11%)</title><rect x="56.8690%" y="116" width="5.1118%" height="15" fill="rgb(205,185,37)"/><text x="57.1190%" y="126.50">__Pyx_..</text></g><g><title>__Pyx_Import (av/video/frame.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.24%)</title><rect x="62.6198%" y="132" width="2.2364%" height="15" fill="rgb(238,207,15)"/><text x="62.8698%" y="142.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.24%)</title><rect x="62.6198%" y="148" width="2.2364%" height="15" fill="rgb(213,199,42)"/><text x="62.8698%" y="158.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (7 samples, 2.24%)</title><rect x="62.6198%" y="164" width="2.2364%" height="15" fill="rgb(235,201,11)"/><text x="62.8698%" y="174.50">_..</text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (5 samples, 1.60%)</title><rect x="63.2588%" y="180" width="1.5974%" height="15" fill="rgb(207,46,11)"/><text x="63.5088%" y="190.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (5 samples, 1.60%)</title><rect x="63.2588%" y="196" width="1.5974%" height="15" fill="rgb(241,35,35)"/><text x="63.5088%" y="206.50"></text></g><g><title>to_ndarray (av/video/frame.cpython-37m-x86_64-linux-gnu.so) (29 samples, 9.27%)</title><rect x="56.8690%" y="100" width="9.2652%" height="15" fill="rgb(243,32,47)"/><text x="57.1190%" y="110.50">to_ndarray (a..</text></g><g><title>frame_useful_array (av/video/frame.cpython-37m-x86_64-linux-gnu.so) (13 samples, 4.15%)</title><rect x="61.9808%" y="116" width="4.1534%" height="15" fill="rgb(247,202,23)"/><text x="62.2308%" y="126.50">frame..</text></g><g><title>__Pyx__PyObject_CallOneArg (av/video/frame.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.28%)</title><rect x="64.8562%" y="132" width="1.2780%" height="15" fill="rgb(219,102,11)"/><text x="65.1062%" y="142.50"></text></g><g><title>array_reshape (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.28%)</title><rect x="64.8562%" y="148" width="1.2780%" height="15" fill="rgb(243,110,44)"/><text x="65.1062%" y="158.50"></text></g><g><title>PyArray_Newshape (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.28%)</title><rect x="64.8562%" y="164" width="1.2780%" height="15" fill="rgb(222,74,54)"/><text x="65.1062%" y="174.50"></text></g><g><title>PyArray_NewCopy (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.28%)</title><rect x="64.8562%" y="180" width="1.2780%" height="15" fill="rgb(216,99,12)"/><text x="65.1062%" y="190.50"></text></g><g><title>PyArray_AssignArray (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.28%)</title><rect x="64.8562%" y="196" width="1.2780%" height="15" fill="rgb(226,22,26)"/><text x="65.1062%" y="206.50"></text></g><g><title>raw_array_assign_array (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.28%)</title><rect x="64.8562%" y="212" width="1.2780%" height="15" fill="rgb(217,163,10)"/><text x="65.1062%" y="222.50"></text></g><g><title>sws_getCachedContext (libswscale.so.5.5.100) (11 samples, 3.51%)</title><rect x="66.7732%" y="180" width="3.5144%" height="15" fill="rgb(213,25,53)"/><text x="67.0232%" y="190.50">sws..</text></g><g><title>sws_init_context (libswscale.so.5.5.100) (10 samples, 3.19%)</title><rect x="67.0927%" y="196" width="3.1949%" height="15" fill="rgb(252,105,26)"/><text x="67.3427%" y="206.50">sws..</text></g><g><title>VideoReformatter__reformat (av/video/reformatter.cpython-37m-x86_64-linux-gnu.so) (32 samples, 10.22%)</title><rect x="66.1342%" y="164" width="10.2236%" height="15" fill="rgb(220,39,43)"/><text x="66.3842%" y="174.50">VideoReformatte..</text></g><g><title>sws_scale (libswscale.so.5.5.100) (19 samples, 6.07%)</title><rect x="70.2875%" y="180" width="6.0703%" height="15" fill="rgb(229,68,48)"/><text x="70.5375%" y="190.50">sws_scal..</text></g><g><title>read_video (torchvision/io/video.py:264) (63 samples, 20.13%)</title><rect x="56.8690%" y="68" width="20.1278%" height="15" fill="rgb(252,8,32)"/><text x="57.1190%" y="78.50">read_video (torchvision/io/video..</text></g><g><title>&lt;listcomp&gt; (torchvision/io/video.py:264) (63 samples, 20.13%)</title><rect x="56.8690%" y="84" width="20.1278%" height="15" fill="rgb(223,20,43)"/><text x="57.1190%" y="94.50">&lt;listcomp&gt; (torchvision/io/video..</text></g><g><title>to_rgb (av/video/frame.cpython-37m-x86_64-linux-gnu.so) (34 samples, 10.86%)</title><rect x="66.1342%" y="100" width="10.8626%" height="15" fill="rgb(229,81,49)"/><text x="66.3842%" y="110.50">to_rgb (av/video..</text></g><g><title>reformat (av/video/frame.cpython-37m-x86_64-linux-gnu.so) (34 samples, 10.86%)</title><rect x="66.1342%" y="116" width="10.8626%" height="15" fill="rgb(236,28,36)"/><text x="66.3842%" y="126.50">reformat (av/vid..</text></g><g><title>reformat (av/video/reformatter.cpython-37m-x86_64-linux-gnu.so) (34 samples, 10.86%)</title><rect x="66.1342%" y="132" width="10.8626%" height="15" fill="rgb(249,185,26)"/><text x="66.3842%" y="142.50">reformat (av/vid..</text></g><g><title>reformat (av/video/reformatter.cpython-37m-x86_64-linux-gnu.so) (34 samples, 10.86%)</title><rect x="66.1342%" y="148" width="10.8626%" height="15" fill="rgb(249,174,33)"/><text x="66.3842%" y="158.50">reformat (av/vid..</text></g><g><title>__Pyx_Import.constprop.39 (av/audio/frame.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.28%)</title><rect x="76.9968%" y="116" width="1.2780%" height="15" fill="rgb(233,201,37)"/><text x="77.2468%" y="126.50"></text></g><g><title>read_video (torchvision/io/video.py:265) (7 samples, 2.24%)</title><rect x="76.9968%" y="68" width="2.2364%" height="15" fill="rgb(221,78,26)"/><text x="77.2468%" y="78.50">r..</text></g><g><title>&lt;listcomp&gt; (torchvision/io/video.py:265) (7 samples, 2.24%)</title><rect x="76.9968%" y="84" width="2.2364%" height="15" fill="rgb(250,127,30)"/><text x="77.2468%" y="94.50">&lt;..</text></g><g><title>to_ndarray (av/audio/frame.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.24%)</title><rect x="76.9968%" y="100" width="2.2364%" height="15" fill="rgb(230,49,44)"/><text x="77.2468%" y="110.50">t..</text></g><g><title>&lt;module&gt; (profile_tvvr.py:13) (183 samples, 58.47%)</title><rect x="23.3227%" y="52" width="58.4665%" height="15" fill="rgb(229,67,23)"/><text x="23.5727%" y="62.50">&lt;module&gt; (profile_tvvr.py:13)</text></g><g><title>read_video (torchvision/io/video.py:268) (8 samples, 2.56%)</title><rect x="79.2332%" y="68" width="2.5559%" height="15" fill="rgb(249,83,47)"/><text x="79.4832%" y="78.50">re..</text></g><g><title>stack (&lt;__array_function__ internals&gt;:6) (8 samples, 2.56%)</title><rect x="79.2332%" y="84" width="2.5559%" height="15" fill="rgb(215,43,3)"/><text x="79.4832%" y="94.50">st..</text></g><g><title>array_implement_array_function (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.56%)</title><rect x="79.2332%" y="100" width="2.5559%" height="15" fill="rgb(238,154,13)"/><text x="79.4832%" y="110.50">ar..</text></g><g><title>stack (numpy/core/shape_base.py:433) (8 samples, 2.56%)</title><rect x="79.2332%" y="116" width="2.5559%" height="15" fill="rgb(219,56,2)"/><text x="79.4832%" y="126.50">st..</text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:6) (8 samples, 2.56%)</title><rect x="79.2332%" y="132" width="2.5559%" height="15" fill="rgb(233,0,4)"/><text x="79.4832%" y="142.50">co..</text></g><g><title>array_implement_array_function (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.56%)</title><rect x="79.2332%" y="148" width="2.5559%" height="15" fill="rgb(235,30,7)"/><text x="79.4832%" y="158.50">ar..</text></g><g><title>array_concatenate (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.56%)</title><rect x="79.2332%" y="164" width="2.5559%" height="15" fill="rgb(250,79,13)"/><text x="79.4832%" y="174.50">ar..</text></g><g><title>PyArray_ConcatenateInto (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.56%)</title><rect x="79.2332%" y="180" width="2.5559%" height="15" fill="rgb(211,146,34)"/><text x="79.4832%" y="190.50">Py..</text></g><g><title>PyArray_ConcatenateArrays (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.56%)</title><rect x="79.2332%" y="196" width="2.5559%" height="15" fill="rgb(228,22,38)"/><text x="79.4832%" y="206.50">Py..</text></g><g><title>PyArray_AssignArray (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.56%)</title><rect x="79.2332%" y="212" width="2.5559%" height="15" fill="rgb(235,168,5)"/><text x="79.4832%" y="222.50">Py..</text></g><g><title>raw_array_assign_array (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.56%)</title><rect x="79.2332%" y="228" width="2.5559%" height="15" fill="rgb(221,155,16)"/><text x="79.4832%" y="238.50">ra..</text></g><g><title>&lt;module&gt; (torchvision/models/detection/faster_rcnn.py:13) (6 samples, 1.92%)</title><rect x="82.1086%" y="500" width="1.9169%" height="15" fill="rgb(215,215,53)"/><text x="82.3586%" y="510.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.92%)</title><rect x="82.1086%" y="516" width="1.9169%" height="15" fill="rgb(223,4,10)"/><text x="82.3586%" y="526.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.92%)</title><rect x="82.1086%" y="532" width="1.9169%" height="15" fill="rgb(234,103,6)"/><text x="82.3586%" y="542.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.92%)</title><rect x="82.1086%" y="548" width="1.9169%" height="15" fill="rgb(227,97,0)"/><text x="82.3586%" y="558.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.92%)</title><rect x="82.1086%" y="564" width="1.9169%" height="15" fill="rgb(234,150,53)"/><text x="82.3586%" y="574.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.92%)</title><rect x="82.1086%" y="580" width="1.9169%" height="15" fill="rgb(228,201,54)"/><text x="82.3586%" y="590.50">_..</text></g><g><title>&lt;module&gt; (torchvision/models/detection/rpn.py:9) (6 samples, 1.92%)</title><rect x="82.1086%" y="596" width="1.9169%" height="15" fill="rgb(222,22,37)"/><text x="82.3586%" y="606.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (6 samples, 1.92%)</title><rect x="82.1086%" y="612" width="1.9169%" height="15" fill="rgb(237,53,32)"/><text x="82.3586%" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.92%)</title><rect x="82.1086%" y="628" width="1.9169%" height="15" fill="rgb(233,25,53)"/><text x="82.3586%" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.92%)</title><rect x="82.1086%" y="644" width="1.9169%" height="15" fill="rgb(210,40,34)"/><text x="82.3586%" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.92%)</title><rect x="82.1086%" y="660" width="1.9169%" height="15" fill="rgb(241,220,44)"/><text x="82.3586%" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.92%)</title><rect x="82.1086%" y="676" width="1.9169%" height="15" fill="rgb(235,28,35)"/><text x="82.3586%" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.92%)</title><rect x="82.1086%" y="692" width="1.9169%" height="15" fill="rgb(210,56,17)"/><text x="82.3586%" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.92%)</title><rect x="82.1086%" y="708" width="1.9169%" height="15" fill="rgb(224,130,29)"/><text x="82.3586%" y="718.50">_..</text></g><g><title>&lt;module&gt; (torchvision/models/detection/_utils.py:230) (4 samples, 1.28%)</title><rect x="82.7476%" y="724" width="1.2780%" height="15" fill="rgb(235,212,8)"/><text x="82.9976%" y="734.50"></text></g><g><title>torch::jit::to_ir::emitSimpleExpr (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="85.3035%" y="1188" width="1.2780%" height="15" fill="rgb(223,33,50)"/><text x="85.5535%" y="1198.50"></text></g><g><title>torch::jit::MagicMethod::call (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="85.3035%" y="1204" width="1.2780%" height="15" fill="rgb(219,149,13)"/><text x="85.5535%" y="1214.50"></text></g><g><title>torch::jit::BuiltinFunction::call (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="85.3035%" y="1220" width="1.2780%" height="15" fill="rgb(250,156,29)"/><text x="85.5535%" y="1230.50"></text></g><g><title>torch::jit::emitBuiltinCall (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="85.3035%" y="1236" width="1.2780%" height="15" fill="rgb(216,193,19)"/><text x="85.5535%" y="1246.50"></text></g><g><title>torch::jit::Graph::create (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="85.3035%" y="1252" width="1.2780%" height="15" fill="rgb(216,135,14)"/><text x="85.5535%" y="1262.50"></text></g><g><title>torch::jit::Graph::create (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="85.3035%" y="1268" width="1.2780%" height="15" fill="rgb(241,47,5)"/><text x="85.5535%" y="1278.50"></text></g><g><title>torch::jit::Node::Node (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="85.3035%" y="1284" width="1.2780%" height="15" fill="rgb(233,42,35)"/><text x="85.5535%" y="1294.50"></text></g><g><title>std::_Hashtable&lt;torch::jit::Node const*, torch::jit::Node const*, std::allocator&lt;torch::jit::Node const*&gt;, std::__detail::_Identity, std::equal_to&lt;torch::jit::Node const*&gt;, std::hash&lt;torch::jit::Node const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="85.3035%" y="1300" width="1.2780%" height="15" fill="rgb(231,13,6)"/><text x="85.5535%" y="1310.50"></text></g><g><title>std::_Hashtable&lt;torch::jit::Node const*, torch::jit::Node const*, std::allocator&lt;torch::jit::Node const*&gt;, std::__detail::_Identity, std::equal_to&lt;torch::jit::Node const*&gt;, std::hash&lt;torch::jit::Node const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_rehash (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="85.3035%" y="1316" width="1.2780%" height="15" fill="rgb(207,181,40)"/><text x="85.5535%" y="1326.50"></text></g><g><title>_tokenize (tokenize.py:583) (4 samples, 1.28%)</title><rect x="87.2204%" y="1412" width="1.2780%" height="15" fill="rgb(254,173,49)"/><text x="87.4704%" y="1422.50"></text></g><g><title>_compile_function_with_overload (torch/jit/__init__.py:2011) (8 samples, 2.56%)</title><rect x="86.5815%" y="1332" width="2.5559%" height="15" fill="rgb(221,1,38)"/><text x="86.8315%" y="1342.50">_c..</text></g><g><title>get_jit_def (torch/jit/frontend.py:164) (8 samples, 2.56%)</title><rect x="86.5815%" y="1348" width="2.5559%" height="15" fill="rgb(206,124,46)"/><text x="86.8315%" y="1358.50">ge..</text></g><g><title>get_source_lines_and_file (torch/_utils_internal.py:46) (8 samples, 2.56%)</title><rect x="86.5815%" y="1364" width="2.5559%" height="15" fill="rgb(249,21,11)"/><text x="86.8315%" y="1374.50">ge..</text></g><g><title>getsourcelines (inspect.py:965) (8 samples, 2.56%)</title><rect x="86.5815%" y="1380" width="2.5559%" height="15" fill="rgb(222,201,40)"/><text x="86.8315%" y="1390.50">ge..</text></g><g><title>getblock (inspect.py:940) (8 samples, 2.56%)</title><rect x="86.5815%" y="1396" width="2.5559%" height="15" fill="rgb(235,61,29)"/><text x="86.8315%" y="1406.50">ge..</text></g><g><title>torch::jit::AliasDb::analyze (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="89.1374%" y="1844" width="1.2780%" height="15" fill="rgb(219,207,3)"/><text x="89.3874%" y="1854.50"></text></g><g><title>torch::jit::AliasDb::analyzeImpl (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="89.1374%" y="1860" width="1.2780%" height="15" fill="rgb(222,56,46)"/><text x="89.3874%" y="1870.50"></text></g><g><title>torch::jit::AliasDb::analyzeIf (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="89.1374%" y="1876" width="1.2780%" height="15" fill="rgb(239,76,54)"/><text x="89.3874%" y="1886.50"></text></g><g><title>torch::jit::AliasDb::analyze (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="89.1374%" y="1892" width="1.2780%" height="15" fill="rgb(231,124,27)"/><text x="89.3874%" y="1902.50"></text></g><g><title>torch::jit::AliasDb::analyzeImpl (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="89.1374%" y="1908" width="1.2780%" height="15" fill="rgb(249,195,6)"/><text x="89.3874%" y="1918.50"></text></g><g><title>torch::jit::AliasDb::analyzeIf (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="89.1374%" y="1924" width="1.2780%" height="15" fill="rgb(237,174,47)"/><text x="89.3874%" y="1934.50"></text></g><g><title>torch::jit::AliasDb::analyzeIf (libtorch_cpu.so) (7 samples, 2.24%)</title><rect x="89.1374%" y="1828" width="2.2364%" height="15" fill="rgb(206,201,31)"/><text x="89.3874%" y="1838.50">t..</text></g><g><title>torch::jit::AliasDb::AliasDb (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1476" width="2.5559%" height="15" fill="rgb(231,57,52)"/><text x="89.3874%" y="1486.50">to..</text></g><g><title>torch::jit::AliasDb::analyze (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1492" width="2.5559%" height="15" fill="rgb(248,177,22)"/><text x="89.3874%" y="1502.50">to..</text></g><g><title>torch::jit::AliasDb::analyze (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1508" width="2.5559%" height="15" fill="rgb(215,211,37)"/><text x="89.3874%" y="1518.50">to..</text></g><g><title>torch::jit::AliasDb::analyzeImpl (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1524" width="2.5559%" height="15" fill="rgb(241,128,51)"/><text x="89.3874%" y="1534.50">to..</text></g><g><title>torch::jit::AliasDb::analyzeIf (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1540" width="2.5559%" height="15" fill="rgb(227,165,31)"/><text x="89.3874%" y="1550.50">to..</text></g><g><title>torch::jit::AliasDb::analyze (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1556" width="2.5559%" height="15" fill="rgb(228,167,24)"/><text x="89.3874%" y="1566.50">to..</text></g><g><title>torch::jit::AliasDb::analyzeImpl (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1572" width="2.5559%" height="15" fill="rgb(228,143,12)"/><text x="89.3874%" y="1582.50">to..</text></g><g><title>torch::jit::AliasDb::analyzeIf (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1588" width="2.5559%" height="15" fill="rgb(249,149,8)"/><text x="89.3874%" y="1598.50">to..</text></g><g><title>torch::jit::AliasDb::analyze (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1604" width="2.5559%" height="15" fill="rgb(243,35,44)"/><text x="89.3874%" y="1614.50">to..</text></g><g><title>torch::jit::AliasDb::analyzeImpl (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1620" width="2.5559%" height="15" fill="rgb(246,89,9)"/><text x="89.3874%" y="1630.50">to..</text></g><g><title>torch::jit::AliasDb::analyzeIf (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1636" width="2.5559%" height="15" fill="rgb(233,213,13)"/><text x="89.3874%" y="1646.50">to..</text></g><g><title>torch::jit::AliasDb::analyze (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1652" width="2.5559%" height="15" fill="rgb(233,141,41)"/><text x="89.3874%" y="1662.50">to..</text></g><g><title>torch::jit::AliasDb::analyzeImpl (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1668" width="2.5559%" height="15" fill="rgb(239,167,4)"/><text x="89.3874%" y="1678.50">to..</text></g><g><title>torch::jit::AliasDb::analyzeIf (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1684" width="2.5559%" height="15" fill="rgb(209,217,16)"/><text x="89.3874%" y="1694.50">to..</text></g><g><title>torch::jit::AliasDb::analyze (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1700" width="2.5559%" height="15" fill="rgb(219,88,35)"/><text x="89.3874%" y="1710.50">to..</text></g><g><title>torch::jit::AliasDb::analyzeImpl (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1716" width="2.5559%" height="15" fill="rgb(220,193,23)"/><text x="89.3874%" y="1726.50">to..</text></g><g><title>torch::jit::AliasDb::analyzeIf (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1732" width="2.5559%" height="15" fill="rgb(230,90,52)"/><text x="89.3874%" y="1742.50">to..</text></g><g><title>torch::jit::AliasDb::analyze (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1748" width="2.5559%" height="15" fill="rgb(252,106,19)"/><text x="89.3874%" y="1758.50">to..</text></g><g><title>torch::jit::AliasDb::analyzeImpl (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1764" width="2.5559%" height="15" fill="rgb(206,74,20)"/><text x="89.3874%" y="1774.50">to..</text></g><g><title>torch::jit::AliasDb::analyzeIf (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1780" width="2.5559%" height="15" fill="rgb(230,138,44)"/><text x="89.3874%" y="1790.50">to..</text></g><g><title>torch::jit::AliasDb::analyze (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1796" width="2.5559%" height="15" fill="rgb(235,182,43)"/><text x="89.3874%" y="1806.50">to..</text></g><g><title>torch::jit::AliasDb::analyzeImpl (libtorch_cpu.so) (8 samples, 2.56%)</title><rect x="89.1374%" y="1812" width="2.5559%" height="15" fill="rgb(242,16,51)"/><text x="89.3874%" y="1822.50">to..</text></g><g><title>torch::jit::runCleanupPasses (libtorch_cpu.so) (9 samples, 2.88%)</title><rect x="89.1374%" y="1444" width="2.8754%" height="15" fill="rgb(248,9,4)"/><text x="89.3874%" y="1454.50">to..</text></g><g><title>torch::jit::EliminateDeadCode (libtorch_cpu.so) (9 samples, 2.88%)</title><rect x="89.1374%" y="1460" width="2.8754%" height="15" fill="rgb(210,31,22)"/><text x="89.3874%" y="1470.50">to..</text></g><g><title>&lt;module&gt; (torchvision/models/detection/roi_heads.py:210) (32 samples, 10.22%)</title><rect x="84.0256%" y="596" width="10.2236%" height="15" fill="rgb(239,54,39)"/><text x="84.2756%" y="606.50">&lt;module&gt; (torch..</text></g><g><title>script (torch/jit/__init__.py:1290) (31 samples, 9.90%)</title><rect x="84.3450%" y="612" width="9.9042%" height="15" fill="rgb(230,99,41)"/><text x="84.5950%" y="622.50">script (torch/..</text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="628" width="9.9042%" height="15" fill="rgb(253,106,12)"/><text x="84.5950%" y="638.50">pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;torch::jit::initJitScriptBindings(_object*)::{lambda(std::string const&amp;, torch::jit::Def const&amp;, std::function&lt;pybind11::function(std::string)&gt;, std::unordered_map&lt;std::string, pybind11::object, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, pybind11::object&gt; &gt; &gt; const&amp;)#35}, torch::jit::StrongFunctionPtr, std::string const&amp;, torch::jit::Def const&amp;, std::function&lt;pybind11::function(std::string)&gt;, std::unordered_map&lt;std::string, pybind11::object, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, pybind11::object&gt; &gt; &gt; const&amp;, pybind11::name, pybind11::scope, pybind11::sibling&gt;(torch::jit::initJitScriptBindings(_object*)::{lambda(std::string const&amp;, torch::jit::Def const&amp;, std::function&lt;pybind11::function(std::string)&gt;, std::unordered_map&lt;std::string, pybind11::object, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, pybind11::object&gt; &gt; &gt; const&amp;)#35}&amp;&amp;, torch::jit::StrongFunctionPtr (*)(std::string const&amp;, torch::jit::Def const&amp;, std::function&lt;pybind11::function(std::string)&gt;, std::unordered_map&lt;std::string, pybind11::object, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, pybind11::object&gt; &gt; &gt; const&amp;), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (libtorch_python.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="644" width="9.9042%" height="15" fill="rgb(213,46,41)"/><text x="84.5950%" y="654.50">void pybind11:..</text></g><g><title>torch::jit::CompilationUnit::define (libtorch_cpu.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="660" width="9.9042%" height="15" fill="rgb(215,133,35)"/><text x="84.5950%" y="670.50">torch::jit::Co..</text></g><g><title>torch::jit::GraphFunction::ensure_defined (libtorch_cpu.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="676" width="9.9042%" height="15" fill="rgb(213,28,5)"/><text x="84.5950%" y="686.50">torch::jit::Gr..</text></g><g><title>torch::jit::CompilationUnit::define(c10::optional&lt;c10::QualifiedName&gt; const&amp;, torch::jit::Def const&amp;, std::shared_ptr&lt;torch::jit::Resolver&gt; const&amp;, torch::jit::Self const*, std::unordered_map&lt;std::string, torch::jit::Function*, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, torch::jit::Function*&gt; &gt; &gt; const&amp;, bool) const::{lambda(torch::jit::Function&amp;)#1}::operator() const (libtorch_cpu.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="692" width="9.9042%" height="15" fill="rgb(215,77,49)"/><text x="84.5950%" y="702.50">torch::jit::Co..</text></g><g><title>torch::jit::to_ir::to_ir (libtorch_cpu.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="708" width="9.9042%" height="15" fill="rgb(248,100,22)"/><text x="84.5950%" y="718.50">torch::jit::to..</text></g><g><title>torch::jit::to_ir::emitDef (libtorch_cpu.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="724" width="9.9042%" height="15" fill="rgb(208,67,9)"/><text x="84.5950%" y="734.50">torch::jit::to..</text></g><g><title>torch::jit::to_ir::emitStatements (libtorch_cpu.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="740" width="9.9042%" height="15" fill="rgb(219,133,21)"/><text x="84.5950%" y="750.50">torch::jit::to..</text></g><g><title>torch::jit::to_ir::emitFor (libtorch_cpu.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="756" width="9.9042%" height="15" fill="rgb(246,46,29)"/><text x="84.5950%" y="766.50">torch::jit::to..</text></g><g><title>torch::jit::to_ir::emitLoopCommon (libtorch_cpu.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="772" width="9.9042%" height="15" fill="rgb(246,185,52)"/><text x="84.5950%" y="782.50">torch::jit::to..</text></g><g><title>std::_Function_handler&lt;void (), torch::jit::to_ir::emitFor(torch::jit::For const&amp;)::{lambda()#1}&gt;::_M_invoke (libtorch_cpu.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="788" width="9.9042%" height="15" fill="rgb(252,136,11)"/><text x="84.5950%" y="798.50">std::_Function..</text></g><g><title>torch::jit::to_ir::emitStatements (libtorch_cpu.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="804" width="9.9042%" height="15" fill="rgb(219,138,53)"/><text x="84.5950%" y="814.50">torch::jit::to..</text></g><g><title>torch::jit::to_ir::emitAssignment (libtorch_cpu.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="820" width="9.9042%" height="15" fill="rgb(211,51,23)"/><text x="84.5950%" y="830.50">torch::jit::to..</text></g><g><title>torch::jit::to_ir::emitSingleAssignment (libtorch_cpu.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="836" width="9.9042%" height="15" fill="rgb(247,221,28)"/><text x="84.5950%" y="846.50">torch::jit::to..</text></g><g><title>torch::jit::to_ir::emitSugaredExpr (libtorch_cpu.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="852" width="9.9042%" height="15" fill="rgb(251,222,45)"/><text x="84.5950%" y="862.50">torch::jit::to..</text></g><g><title>torch::jit::to_ir::emitApplyExpr (libtorch_cpu.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="868" width="9.9042%" height="15" fill="rgb(217,162,53)"/><text x="84.5950%" y="878.50">torch::jit::to..</text></g><g><title>torch::jit::to_ir::emitSugaredExpr (libtorch_cpu.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="884" width="9.9042%" height="15" fill="rgb(229,93,14)"/><text x="84.5950%" y="894.50">torch::jit::to..</text></g><g><title>torch::jit::Environment::getSugaredVar (libtorch_cpu.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="900" width="9.9042%" height="15" fill="rgb(209,67,49)"/><text x="84.5950%" y="910.50">torch::jit::En..</text></g><g><title>torch::jit::FunctionResolver::resolveValue (libtorch_cpu.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="916" width="9.9042%" height="15" fill="rgb(213,87,29)"/><text x="84.5950%" y="926.50">torch::jit::Fu..</text></g><g><title>torch::jit::(anonymous namespace)::PythonResolver::resolveValue (libtorch_python.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="932" width="9.9042%" height="15" fill="rgb(205,151,52)"/><text x="84.5950%" y="942.50">torch::jit::(a..</text></g><g><title>torch::jit::toSugaredValue (libtorch_python.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="948" width="9.9042%" height="15" fill="rgb(253,215,39)"/><text x="84.5950%" y="958.50">torch::jit::to..</text></g><g><title>pybind11::detail::object_api&lt;pybind11::detail::accessor&lt;pybind11::detail::accessor_policies::str_attr&gt; &gt;::operator()&lt;(pybind11::return_value_policy)1, pybind11::object&amp;, torch::jit::SourceRange&amp;&gt; (libtorch_python.so) (31 samples, 9.90%)</title><rect x="84.3450%" y="964" width="9.9042%" height="15" fill="rgb(221,220,41)"/><text x="84.5950%" y="974.50">pybind11::deta..</text></g><g><title>try_compile_fn (torch/jit/_recursive.py:568) (31 samples, 9.90%)</title><rect x="84.3450%" y="980" width="9.9042%" height="15" fill="rgb(218,133,21)"/><text x="84.5950%" y="990.50">try_compile_fn..</text></g><g><title>script (torch/jit/__init__.py:1290) (28 samples, 8.95%)</title><rect x="85.3035%" y="996" width="8.9457%" height="15" fill="rgb(221,193,43)"/><text x="85.5535%" y="1006.50">script (torch..</text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (28 samples, 8.95%)</title><rect x="85.3035%" y="1012" width="8.9457%" height="15" fill="rgb(240,128,52)"/><text x="85.5535%" y="1022.50">pybind11::cpp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;torch::jit::initJitScriptBindings(_object*)::{lambda(std::string const&amp;, torch::jit::Def const&amp;, std::function&lt;pybind11::function(std::string)&gt;, std::unordered_map&lt;std::string, pybind11::object, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, pybind11::object&gt; &gt; &gt; const&amp;)#35}, torch::jit::StrongFunctionPtr, std::string const&amp;, torch::jit::Def const&amp;, std::function&lt;pybind11::function(std::string)&gt;, std::unordered_map&lt;std::string, pybind11::object, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, pybind11::object&gt; &gt; &gt; const&amp;, pybind11::name, pybind11::scope, pybind11::sibling&gt;(torch::jit::initJitScriptBindings(_object*)::{lambda(std::string const&amp;, torch::jit::Def const&amp;, std::function&lt;pybind11::function(std::string)&gt;, std::unordered_map&lt;std::string, pybind11::object, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, pybind11::object&gt; &gt; &gt; const&amp;)#35}&amp;&amp;, torch::jit::StrongFunctionPtr (*)(std::string const&amp;, torch::jit::Def const&amp;, std::function&lt;pybind11::function(std::string)&gt;, std::unordered_map&lt;std::string, pybind11::object, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, pybind11::object&gt; &gt; &gt; const&amp;), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (libtorch_python.so) (28 samples, 8.95%)</title><rect x="85.3035%" y="1028" width="8.9457%" height="15" fill="rgb(253,114,12)"/><text x="85.5535%" y="1038.50">void pybind11..</text></g><g><title>torch::jit::CompilationUnit::define (libtorch_cpu.so) (28 samples, 8.95%)</title><rect x="85.3035%" y="1044" width="8.9457%" height="15" fill="rgb(215,223,47)"/><text x="85.5535%" y="1054.50">torch::jit::C..</text></g><g><title>torch::jit::GraphFunction::ensure_defined (libtorch_cpu.so) (28 samples, 8.95%)</title><rect x="85.3035%" y="1060" width="8.9457%" height="15" fill="rgb(248,225,23)"/><text x="85.5535%" y="1070.50">torch::jit::G..</text></g><g><title>torch::jit::CompilationUnit::define(c10::optional&lt;c10::QualifiedName&gt; const&amp;, torch::jit::Def const&amp;, std::shared_ptr&lt;torch::jit::Resolver&gt; const&amp;, torch::jit::Self const*, std::unordered_map&lt;std::string, torch::jit::Function*, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, torch::jit::Function*&gt; &gt; &gt; const&amp;, bool) const::{lambda(torch::jit::Function&amp;)#1}::operator() const (libtorch_cpu.so) (28 samples, 8.95%)</title><rect x="85.3035%" y="1076" width="8.9457%" height="15" fill="rgb(250,108,0)"/><text x="85.5535%" y="1086.50">torch::jit::C..</text></g><g><title>torch::jit::to_ir::to_ir (libtorch_cpu.so) (28 samples, 8.95%)</title><rect x="85.3035%" y="1092" width="8.9457%" height="15" fill="rgb(228,208,7)"/><text x="85.5535%" y="1102.50">torch::jit::t..</text></g><g><title>torch::jit::to_ir::emitDef (libtorch_cpu.so) (28 samples, 8.95%)</title><rect x="85.3035%" y="1108" width="8.9457%" height="15" fill="rgb(244,45,10)"/><text x="85.5535%" y="1118.50">torch::jit::t..</text></g><g><title>torch::jit::to_ir::emitStatements (libtorch_cpu.so) (28 samples, 8.95%)</title><rect x="85.3035%" y="1124" width="8.9457%" height="15" fill="rgb(207,125,25)"/><text x="85.5535%" y="1134.50">torch::jit::t..</text></g><g><title>torch::jit::to_ir::emitAssignment (libtorch_cpu.so) (28 samples, 8.95%)</title><rect x="85.3035%" y="1140" width="8.9457%" height="15" fill="rgb(210,195,18)"/><text x="85.5535%" y="1150.50">torch::jit::t..</text></g><g><title>torch::jit::to_ir::emitSingleAssignment (libtorch_cpu.so) (28 samples, 8.95%)</title><rect x="85.3035%" y="1156" width="8.9457%" height="15" fill="rgb(249,80,12)"/><text x="85.5535%" y="1166.50">torch::jit::t..</text></g><g><title>torch::jit::to_ir::emitSugaredExpr (libtorch_cpu.so) (28 samples, 8.95%)</title><rect x="85.3035%" y="1172" width="8.9457%" height="15" fill="rgb(221,65,9)"/><text x="85.5535%" y="1182.50">torch::jit::t..</text></g><g><title>torch::jit::to_ir::emitSubscript (libtorch_cpu.so) (24 samples, 7.67%)</title><rect x="86.5815%" y="1188" width="7.6677%" height="15" fill="rgb(235,49,36)"/><text x="86.8315%" y="1198.50">torch::jit..</text></g><g><title>torch::jit::to_ir::emitSugaredExpr (libtorch_cpu.so) (24 samples, 7.67%)</title><rect x="86.5815%" y="1204" width="7.6677%" height="15" fill="rgb(225,32,20)"/><text x="86.8315%" y="1214.50">torch::jit..</text></g><g><title>torch::jit::to_ir::emitApplyExpr (libtorch_cpu.so) (24 samples, 7.67%)</title><rect x="86.5815%" y="1220" width="7.6677%" height="15" fill="rgb(215,141,46)"/><text x="86.8315%" y="1230.50">torch::jit..</text></g><g><title>torch::jit::to_ir::emitSugaredExpr (libtorch_cpu.so) (24 samples, 7.67%)</title><rect x="86.5815%" y="1236" width="7.6677%" height="15" fill="rgb(250,160,47)"/><text x="86.8315%" y="1246.50">torch::jit..</text></g><g><title>torch::jit::PythonModuleValue::attr (libtorch_python.so) (24 samples, 7.67%)</title><rect x="86.5815%" y="1252" width="7.6677%" height="15" fill="rgb(216,222,40)"/><text x="86.8315%" y="1262.50">torch::jit..</text></g><g><title>torch::jit::toSugaredValue (libtorch_python.so) (24 samples, 7.67%)</title><rect x="86.5815%" y="1268" width="7.6677%" height="15" fill="rgb(234,217,39)"/><text x="86.8315%" y="1278.50">torch::jit..</text></g><g><title>pybind11::detail::object_api&lt;pybind11::detail::accessor&lt;pybind11::detail::accessor_policies::str_attr&gt; &gt;::operator()&lt;(pybind11::return_value_policy)1, pybind11::object&amp;&gt; (libtorch_python.so) (24 samples, 7.67%)</title><rect x="86.5815%" y="1284" width="7.6677%" height="15" fill="rgb(207,178,40)"/><text x="86.8315%" y="1294.50">pybind11::..</text></g><g><title>pybind11::detail::simple_collector&lt;(pybind11::return_value_policy)1&gt;::call (libtorch_python.so) (24 samples, 7.67%)</title><rect x="86.5815%" y="1300" width="7.6677%" height="15" fill="rgb(221,136,13)"/><text x="86.8315%" y="1310.50">pybind11::..</text></g><g><title>_get_overloads (torch/jit/__init__.py:2030) (24 samples, 7.67%)</title><rect x="86.5815%" y="1316" width="7.6677%" height="15" fill="rgb(249,199,10)"/><text x="86.8315%" y="1326.50">_get_overl..</text></g><g><title>_compile_function_with_overload (torch/jit/__init__.py:2017) (16 samples, 5.11%)</title><rect x="89.1374%" y="1332" width="5.1118%" height="15" fill="rgb(249,222,13)"/><text x="89.3874%" y="1342.50">_compi..</text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (16 samples, 5.11%)</title><rect x="89.1374%" y="1348" width="5.1118%" height="15" fill="rgb(244,185,38)"/><text x="89.3874%" y="1358.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;torch::jit::initJitScriptBindings(_object*)::{lambda(std::string const&amp;, torch::jit::Decl const&amp;, torch::jit::Def const&amp;, std::function&lt;pybind11::function(std::string)&gt;, std::unordered_map&lt;std::string, pybind11::object, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, pybind11::object&gt; &gt; &gt; const&amp;, pybind11::object const&amp;)#36}, torch::jit::StrongFunctionPtr, std::string const&amp;, torch::jit::Decl const&amp;, torch::jit::Def const&amp;, std::function&lt;pybind11::function(std::string)&gt;, std::unordered_map&lt;std::string, pybind11::object, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, pybind11::object&gt; &gt; &gt; const&amp;, pybind11::object const&amp;, pybind11::name, pybind11::scope, pybind11::sibling&gt;(torch::jit::initJitScriptBindings(_object*)::{lambda(std::string const&amp;, torch::jit::Decl const&amp;, torch::jit::Def const&amp;, std::function&lt;pybind11::function(std::string)&gt;, std::unordered_map&lt;std::string, pybind11::object, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, pybind11::object&gt; &gt; &gt; const&amp;, pybind11::object const&amp;)#36}&amp;&amp;, torch::jit::StrongFunctionPtr (*)(std::string const&amp;, torch::jit::Decl const&amp;, torch::jit::Def const&amp;, std::function&lt;pybind11::function(std::string)&gt;, std::unordered_map&lt;std::string, pybind11::object, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, pybind11::object&gt; &gt; &gt; const&amp;, pybind11::object const&amp;), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (libtorch_python.so) (16 samples, 5.11%)</title><rect x="89.1374%" y="1364" width="5.1118%" height="15" fill="rgb(236,202,9)"/><text x="89.3874%" y="1374.50">void p..</text></g><g><title>torch::jit::CompilationUnit::define (libtorch_cpu.so) (16 samples, 5.11%)</title><rect x="89.1374%" y="1380" width="5.1118%" height="15" fill="rgb(250,229,37)"/><text x="89.3874%" y="1390.50">torch:..</text></g><g><title>torch::jit::GraphFunction::ensure_defined (libtorch_cpu.so) (16 samples, 5.11%)</title><rect x="89.1374%" y="1396" width="5.1118%" height="15" fill="rgb(206,174,23)"/><text x="89.3874%" y="1406.50">torch:..</text></g><g><title>torch::jit::CompilationUnit::define(c10::optional&lt;c10::QualifiedName&gt; const&amp;, torch::jit::Def const&amp;, std::shared_ptr&lt;torch::jit::Resolver&gt; const&amp;, torch::jit::Self const*, std::unordered_map&lt;std::string, torch::jit::Function*, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, torch::jit::Function*&gt; &gt; &gt; const&amp;, bool) const::{lambda(torch::jit::Function&amp;)#1}::operator() const (libtorch_cpu.so) (16 samples, 5.11%)</title><rect x="89.1374%" y="1412" width="5.1118%" height="15" fill="rgb(211,33,43)"/><text x="89.3874%" y="1422.50">torch:..</text></g><g><title>torch::jit::to_ir::to_ir (libtorch_cpu.so) (16 samples, 5.11%)</title><rect x="89.1374%" y="1428" width="5.1118%" height="15" fill="rgb(245,58,50)"/><text x="89.3874%" y="1438.50">torch:..</text></g><g><title>torch::jit::to_ir::emitDef (libtorch_cpu.so) (7 samples, 2.24%)</title><rect x="92.0128%" y="1444" width="2.2364%" height="15" fill="rgb(244,68,36)"/><text x="92.2628%" y="1454.50">t..</text></g><g><title>torch::jit::to_ir::emitStatements (libtorch_cpu.so) (7 samples, 2.24%)</title><rect x="92.0128%" y="1460" width="2.2364%" height="15" fill="rgb(232,229,15)"/><text x="92.2628%" y="1470.50">t..</text></g><g><title>torch::jit::to_ir::emitIfElseBlocks (libtorch_cpu.so) (7 samples, 2.24%)</title><rect x="92.0128%" y="1476" width="2.2364%" height="15" fill="rgb(254,30,23)"/><text x="92.2628%" y="1486.50">t..</text></g><g><title>torch::jit::to_ir::emitSingleIfBranch (libtorch_cpu.so) (7 samples, 2.24%)</title><rect x="92.0128%" y="1492" width="2.2364%" height="15" fill="rgb(235,160,14)"/><text x="92.2628%" y="1502.50">t..</text></g><g><title>torch::jit::to_ir::emitStatements (libtorch_cpu.so) (7 samples, 2.24%)</title><rect x="92.0128%" y="1508" width="2.2364%" height="15" fill="rgb(212,155,44)"/><text x="92.2628%" y="1518.50">t..</text></g><g><title>torch::jit::to_ir::emitReturn (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="92.9712%" y="1524" width="1.2780%" height="15" fill="rgb(226,2,50)"/><text x="93.2212%" y="1534.50"></text></g><g><title>torch::jit::to_ir::emitExpr (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="92.9712%" y="1540" width="1.2780%" height="15" fill="rgb(234,177,6)"/><text x="93.2212%" y="1550.50"></text></g><g><title>torch::jit::to_ir::emitSugaredExpr (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="92.9712%" y="1556" width="1.2780%" height="15" fill="rgb(217,24,9)"/><text x="93.2212%" y="1566.50"></text></g><g><title>torch::jit::to_ir::emitApplyExpr (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="92.9712%" y="1572" width="1.2780%" height="15" fill="rgb(220,13,46)"/><text x="93.2212%" y="1582.50"></text></g><g><title>torch::jit::to_ir::getNamedValues (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="92.9712%" y="1588" width="1.2780%" height="15" fill="rgb(239,221,27)"/><text x="93.2212%" y="1598.50"></text></g><g><title>torch::jit::to_ir::emitExpr (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="92.9712%" y="1604" width="1.2780%" height="15" fill="rgb(222,198,25)"/><text x="93.2212%" y="1614.50"></text></g><g><title>torch::jit::to_ir::emitSugaredExpr (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="92.9712%" y="1620" width="1.2780%" height="15" fill="rgb(211,99,13)"/><text x="93.2212%" y="1630.50"></text></g><g><title>torch::jit::to_ir::emitApplyExpr (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="92.9712%" y="1636" width="1.2780%" height="15" fill="rgb(232,111,31)"/><text x="93.2212%" y="1646.50"></text></g><g><title>torch::jit::to_ir::emitSugaredExpr (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="92.9712%" y="1652" width="1.2780%" height="15" fill="rgb(245,82,37)"/><text x="93.2212%" y="1662.50"></text></g><g><title>torch::jit::Environment::getSugaredVar (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="92.9712%" y="1668" width="1.2780%" height="15" fill="rgb(227,149,46)"/><text x="93.2212%" y="1678.50"></text></g><g><title>torch::jit::FunctionResolver::resolveValue (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="92.9712%" y="1684" width="1.2780%" height="15" fill="rgb(218,36,50)"/><text x="93.2212%" y="1694.50"></text></g><g><title>torch::jit::(anonymous namespace)::PythonResolver::resolveValue (libtorch_python.so) (4 samples, 1.28%)</title><rect x="92.9712%" y="1700" width="1.2780%" height="15" fill="rgb(226,80,48)"/><text x="93.2212%" y="1710.50"></text></g><g><title>torch::jit::toSugaredValue (libtorch_python.so) (4 samples, 1.28%)</title><rect x="92.9712%" y="1716" width="1.2780%" height="15" fill="rgb(238,224,15)"/><text x="93.2212%" y="1726.50"></text></g><g><title>pybind11::detail::object_api&lt;pybind11::detail::accessor&lt;pybind11::detail::accessor_policies::str_attr&gt; &gt;::operator()&lt;(pybind11::return_value_policy)1, pybind11::object&amp;&gt; (libtorch_python.so) (4 samples, 1.28%)</title><rect x="92.9712%" y="1732" width="1.2780%" height="15" fill="rgb(241,136,10)"/><text x="93.2212%" y="1742.50"></text></g><g><title>pybind11::detail::simple_collector&lt;(pybind11::return_value_policy)1&gt;::call (libtorch_python.so) (4 samples, 1.28%)</title><rect x="92.9712%" y="1748" width="1.2780%" height="15" fill="rgb(208,32,45)"/><text x="93.2212%" y="1758.50"></text></g><g><title>_get_overloads (torch/jit/__init__.py:2030) (4 samples, 1.28%)</title><rect x="92.9712%" y="1764" width="1.2780%" height="15" fill="rgb(207,135,9)"/><text x="93.2212%" y="1774.50"></text></g><g><title>&lt;module&gt; (torchvision/models/detection/faster_rcnn.py:14) (38 samples, 12.14%)</title><rect x="84.0256%" y="500" width="12.1406%" height="15" fill="rgb(206,86,44)"/><text x="84.2756%" y="510.50">&lt;module&gt; (torchvis..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (38 samples, 12.14%)</title><rect x="84.0256%" y="516" width="12.1406%" height="15" fill="rgb(245,177,15)"/><text x="84.2756%" y="526.50">_find_and_load (&lt;f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (38 samples, 12.14%)</title><rect x="84.0256%" y="532" width="12.1406%" height="15" fill="rgb(206,64,50)"/><text x="84.2756%" y="542.50">_find_and_load_unl..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (38 samples, 12.14%)</title><rect x="84.0256%" y="548" width="12.1406%" height="15" fill="rgb(234,36,40)"/><text x="84.2756%" y="558.50">_load_unlocked (&lt;f..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (38 samples, 12.14%)</title><rect x="84.0256%" y="564" width="12.1406%" height="15" fill="rgb(213,64,8)"/><text x="84.2756%" y="574.50">exec_module (&lt;froz..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (38 samples, 12.14%)</title><rect x="84.0256%" y="580" width="12.1406%" height="15" fill="rgb(210,75,36)"/><text x="84.2756%" y="590.50">_call_with_frames_..</text></g><g><title>&lt;module&gt; (torchvision/models/detection/roi_heads.py:462) (6 samples, 1.92%)</title><rect x="94.2492%" y="596" width="1.9169%" height="15" fill="rgb(229,88,21)"/><text x="94.4992%" y="606.50">&lt;..</text></g><g><title>script (torch/jit/__init__.py:1290) (4 samples, 1.28%)</title><rect x="94.8882%" y="612" width="1.2780%" height="15" fill="rgb(252,204,47)"/><text x="95.1382%" y="622.50"></text></g><g><title>pybind11::cpp_function::dispatcher (libtorch_python.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="628" width="1.2780%" height="15" fill="rgb(208,77,27)"/><text x="95.1382%" y="638.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;torch::jit::initJitScriptBindings(_object*)::{lambda(std::string const&amp;, torch::jit::Def const&amp;, std::function&lt;pybind11::function(std::string)&gt;, std::unordered_map&lt;std::string, pybind11::object, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, pybind11::object&gt; &gt; &gt; const&amp;)#35}, torch::jit::StrongFunctionPtr, std::string const&amp;, torch::jit::Def const&amp;, std::function&lt;pybind11::function(std::string)&gt;, std::unordered_map&lt;std::string, pybind11::object, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, pybind11::object&gt; &gt; &gt; const&amp;, pybind11::name, pybind11::scope, pybind11::sibling&gt;(torch::jit::initJitScriptBindings(_object*)::{lambda(std::string const&amp;, torch::jit::Def const&amp;, std::function&lt;pybind11::function(std::string)&gt;, std::unordered_map&lt;std::string, pybind11::object, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, pybind11::object&gt; &gt; &gt; const&amp;)#35}&amp;&amp;, torch::jit::StrongFunctionPtr (*)(std::string const&amp;, torch::jit::Def const&amp;, std::function&lt;pybind11::function(std::string)&gt;, std::unordered_map&lt;std::string, pybind11::object, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, pybind11::object&gt; &gt; &gt; const&amp;), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (libtorch_python.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="644" width="1.2780%" height="15" fill="rgb(221,76,26)"/><text x="95.1382%" y="654.50"></text></g><g><title>torch::jit::CompilationUnit::define (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="660" width="1.2780%" height="15" fill="rgb(225,139,18)"/><text x="95.1382%" y="670.50"></text></g><g><title>torch::jit::GraphFunction::ensure_defined (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="676" width="1.2780%" height="15" fill="rgb(230,137,11)"/><text x="95.1382%" y="686.50"></text></g><g><title>torch::jit::CompilationUnit::define(c10::optional&lt;c10::QualifiedName&gt; const&amp;, torch::jit::Def const&amp;, std::shared_ptr&lt;torch::jit::Resolver&gt; const&amp;, torch::jit::Self const*, std::unordered_map&lt;std::string, torch::jit::Function*, std::hash&lt;std::string&gt;, std::equal_to&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, torch::jit::Function*&gt; &gt; &gt; const&amp;, bool) const::{lambda(torch::jit::Function&amp;)#1}::operator() const (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="692" width="1.2780%" height="15" fill="rgb(212,28,1)"/><text x="95.1382%" y="702.50"></text></g><g><title>torch::jit::to_ir::to_ir (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="708" width="1.2780%" height="15" fill="rgb(248,164,17)"/><text x="95.1382%" y="718.50"></text></g><g><title>torch::jit::to_ir::emitDef (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="724" width="1.2780%" height="15" fill="rgb(222,171,42)"/><text x="95.1382%" y="734.50"></text></g><g><title>torch::jit::to_ir::emitStatements (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="740" width="1.2780%" height="15" fill="rgb(243,84,45)"/><text x="95.1382%" y="750.50"></text></g><g><title>torch::jit::to_ir::emitFor (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="756" width="1.2780%" height="15" fill="rgb(252,49,23)"/><text x="95.1382%" y="766.50"></text></g><g><title>torch::jit::to_ir::emitLoopCommon (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="772" width="1.2780%" height="15" fill="rgb(215,19,7)"/><text x="95.1382%" y="782.50"></text></g><g><title>std::_Function_handler&lt;void (), torch::jit::to_ir::emitFor(torch::jit::For const&amp;)::{lambda()#1}&gt;::_M_invoke (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="788" width="1.2780%" height="15" fill="rgb(238,81,41)"/><text x="95.1382%" y="798.50"></text></g><g><title>torch::jit::to_ir::emitStatements (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="804" width="1.2780%" height="15" fill="rgb(210,199,37)"/><text x="95.1382%" y="814.50"></text></g><g><title>torch::jit::to_ir::emitAssignment (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="820" width="1.2780%" height="15" fill="rgb(244,192,49)"/><text x="95.1382%" y="830.50"></text></g><g><title>torch::jit::to_ir::emitSingleAssignment (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="836" width="1.2780%" height="15" fill="rgb(226,211,11)"/><text x="95.1382%" y="846.50"></text></g><g><title>torch::jit::to_ir::emitSugaredExpr (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="852" width="1.2780%" height="15" fill="rgb(236,162,54)"/><text x="95.1382%" y="862.50"></text></g><g><title>torch::jit::to_ir::emitApplyExpr (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="868" width="1.2780%" height="15" fill="rgb(220,229,9)"/><text x="95.1382%" y="878.50"></text></g><g><title>torch::jit::to_ir::emitSugaredExpr (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="884" width="1.2780%" height="15" fill="rgb(250,87,22)"/><text x="95.1382%" y="894.50"></text></g><g><title>torch::jit::Environment::getSugaredVar (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="900" width="1.2780%" height="15" fill="rgb(239,43,17)"/><text x="95.1382%" y="910.50"></text></g><g><title>torch::jit::FunctionResolver::resolveValue (libtorch_cpu.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="916" width="1.2780%" height="15" fill="rgb(231,177,25)"/><text x="95.1382%" y="926.50"></text></g><g><title>torch::jit::(anonymous namespace)::PythonResolver::resolveValue (libtorch_python.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="932" width="1.2780%" height="15" fill="rgb(219,179,1)"/><text x="95.1382%" y="942.50"></text></g><g><title>torch::jit::toSugaredValue (libtorch_python.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="948" width="1.2780%" height="15" fill="rgb(238,219,53)"/><text x="95.1382%" y="958.50"></text></g><g><title>pybind11::detail::object_api&lt;pybind11::detail::accessor&lt;pybind11::detail::accessor_policies::str_attr&gt; &gt;::operator()&lt;(pybind11::return_value_policy)1, pybind11::object&amp;, torch::jit::SourceRange&amp;&gt; (libtorch_python.so) (4 samples, 1.28%)</title><rect x="94.8882%" y="964" width="1.2780%" height="15" fill="rgb(232,167,36)"/><text x="95.1382%" y="974.50"></text></g><g><title>try_compile_fn (torch/jit/_recursive.py:568) (4 samples, 1.28%)</title><rect x="94.8882%" y="980" width="1.2780%" height="15" fill="rgb(244,19,51)"/><text x="95.1382%" y="990.50"></text></g><g><title>&lt;module&gt; (torchvision/models/detection/__init__.py:1) (48 samples, 15.34%)</title><rect x="82.1086%" y="404" width="15.3355%" height="15" fill="rgb(224,6,22)"/><text x="82.3586%" y="414.50">&lt;module&gt; (torchvision/m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (48 samples, 15.34%)</title><rect x="82.1086%" y="420" width="15.3355%" height="15" fill="rgb(224,145,5)"/><text x="82.3586%" y="430.50">_find_and_load (&lt;frozen..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (48 samples, 15.34%)</title><rect x="82.1086%" y="436" width="15.3355%" height="15" fill="rgb(234,130,49)"/><text x="82.3586%" y="446.50">_find_and_load_unlocked..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (48 samples, 15.34%)</title><rect x="82.1086%" y="452" width="15.3355%" height="15" fill="rgb(254,6,2)"/><text x="82.3586%" y="462.50">_load_unlocked (&lt;frozen..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (48 samples, 15.34%)</title><rect x="82.1086%" y="468" width="15.3355%" height="15" fill="rgb(208,96,46)"/><text x="82.3586%" y="478.50">exec_module (&lt;frozen im..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (48 samples, 15.34%)</title><rect x="82.1086%" y="484" width="15.3355%" height="15" fill="rgb(239,3,39)"/><text x="82.3586%" y="494.50">_call_with_frames_remov..</text></g><g><title>&lt;module&gt; (torchvision/models/detection/faster_rcnn.py:7) (4 samples, 1.28%)</title><rect x="96.1661%" y="500" width="1.2780%" height="15" fill="rgb(233,210,1)"/><text x="96.4161%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.28%)</title><rect x="96.1661%" y="516" width="1.2780%" height="15" fill="rgb(244,137,37)"/><text x="96.4161%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.28%)</title><rect x="96.1661%" y="532" width="1.2780%" height="15" fill="rgb(240,136,2)"/><text x="96.4161%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.28%)</title><rect x="96.1661%" y="548" width="1.2780%" height="15" fill="rgb(239,18,37)"/><text x="96.4161%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.28%)</title><rect x="96.1661%" y="564" width="1.2780%" height="15" fill="rgb(218,185,22)"/><text x="96.4161%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.28%)</title><rect x="96.1661%" y="580" width="1.2780%" height="15" fill="rgb(225,218,4)"/><text x="96.4161%" y="590.50"></text></g><g><title>&lt;module&gt; (torchvision/models/__init__.py:12) (50 samples, 15.97%)</title><rect x="82.1086%" y="276" width="15.9744%" height="15" fill="rgb(230,182,32)"/><text x="82.3586%" y="286.50">&lt;module&gt; (torchvision/mod..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (50 samples, 15.97%)</title><rect x="82.1086%" y="292" width="15.9744%" height="15" fill="rgb(242,56,43)"/><text x="82.3586%" y="302.50">_handle_fromlist (&lt;frozen..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (50 samples, 15.97%)</title><rect x="82.1086%" y="308" width="15.9744%" height="15" fill="rgb(233,99,24)"/><text x="82.3586%" y="318.50">_call_with_frames_removed..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (50 samples, 15.97%)</title><rect x="82.1086%" y="324" width="15.9744%" height="15" fill="rgb(234,209,42)"/><text x="82.3586%" y="334.50">_find_and_load (&lt;frozen i..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (50 samples, 15.97%)</title><rect x="82.1086%" y="340" width="15.9744%" height="15" fill="rgb(227,7,12)"/><text x="82.3586%" y="350.50">_find_and_load_unlocked (..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (50 samples, 15.97%)</title><rect x="82.1086%" y="356" width="15.9744%" height="15" fill="rgb(245,203,43)"/><text x="82.3586%" y="366.50">_load_unlocked (&lt;frozen i..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (50 samples, 15.97%)</title><rect x="82.1086%" y="372" width="15.9744%" height="15" fill="rgb(238,205,33)"/><text x="82.3586%" y="382.50">exec_module (&lt;frozen impo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (50 samples, 15.97%)</title><rect x="82.1086%" y="388" width="15.9744%" height="15" fill="rgb(231,56,7)"/><text x="82.3586%" y="398.50">_call_with_frames_removed..</text></g><g><title>&lt;module&gt; (torchvision/__init__.py:3) (55 samples, 17.57%)</title><rect x="81.7891%" y="148" width="17.5719%" height="15" fill="rgb(244,186,29)"/><text x="82.0391%" y="158.50">&lt;module&gt; (torchvision/__ini..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (55 samples, 17.57%)</title><rect x="81.7891%" y="164" width="17.5719%" height="15" fill="rgb(234,111,31)"/><text x="82.0391%" y="174.50">_handle_fromlist (&lt;frozen i..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (55 samples, 17.57%)</title><rect x="81.7891%" y="180" width="17.5719%" height="15" fill="rgb(241,149,10)"/><text x="82.0391%" y="190.50">_call_with_frames_removed (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (55 samples, 17.57%)</title><rect x="81.7891%" y="196" width="17.5719%" height="15" fill="rgb(249,206,44)"/><text x="82.0391%" y="206.50">_find_and_load (&lt;frozen imp..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (55 samples, 17.57%)</title><rect x="81.7891%" y="212" width="17.5719%" height="15" fill="rgb(251,153,30)"/><text x="82.0391%" y="222.50">_find_and_load_unlocked (&lt;f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (55 samples, 17.57%)</title><rect x="81.7891%" y="228" width="17.5719%" height="15" fill="rgb(239,152,38)"/><text x="82.0391%" y="238.50">_load_unlocked (&lt;frozen imp..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (55 samples, 17.57%)</title><rect x="81.7891%" y="244" width="17.5719%" height="15" fill="rgb(249,139,47)"/><text x="82.0391%" y="254.50">exec_module (&lt;frozen import..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (55 samples, 17.57%)</title><rect x="81.7891%" y="260" width="17.5719%" height="15" fill="rgb(244,64,35)"/><text x="82.0391%" y="270.50">_call_with_frames_removed (..</text></g><g><title>all (313 samples, 100%)</title><rect x="0.0000%" y="36" width="100.0000%" height="15" fill="rgb(216,46,15)"/><text x="0.2500%" y="46.50"></text></g><g><title>&lt;module&gt; (profile_tvvr.py:5) (57 samples, 18.21%)</title><rect x="81.7891%" y="52" width="18.2109%" height="15" fill="rgb(250,74,19)"/><text x="82.0391%" y="62.50">&lt;module&gt; (profile_tvvr.py:5)</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (57 samples, 18.21%)</title><rect x="81.7891%" y="68" width="18.2109%" height="15" fill="rgb(249,42,33)"/><text x="82.0391%" y="78.50">_find_and_load (&lt;frozen impo..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (57 samples, 18.21%)</title><rect x="81.7891%" y="84" width="18.2109%" height="15" fill="rgb(242,149,17)"/><text x="82.0391%" y="94.50">_find_and_load_unlocked (&lt;fr..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (57 samples, 18.21%)</title><rect x="81.7891%" y="100" width="18.2109%" height="15" fill="rgb(244,29,21)"/><text x="82.0391%" y="110.50">_load_unlocked (&lt;frozen impo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (57 samples, 18.21%)</title><rect x="81.7891%" y="116" width="18.2109%" height="15" fill="rgb(220,130,37)"/><text x="82.0391%" y="126.50">exec_module (&lt;frozen importl..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (57 samples, 18.21%)</title><rect x="81.7891%" y="132" width="18.2109%" height="15" fill="rgb(211,67,2)"/><text x="82.0391%" y="142.50">_call_with_frames_removed (&lt;..</text></g></svg></svg>